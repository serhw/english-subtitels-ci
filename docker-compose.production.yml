version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    command:
      # Enable Swarm provider for Traefik v3
      - "--providers.swarm=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.swarm.network=app-network"
      # API and dashboard
      - "--api.dashboard=true"
      - "--api.insecure=false"
      # Entry points
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # SSL certificate resolver
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@sub-english.top"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Logging (debug level to troubleshoot)
      - "--log.level=DEBUG"
      - "--accesslog=true"
      # Enable ping endpoint for health checks
      - "--ping=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        # Traefik dashboard
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.sub-english.top`)"
        - "traefik.http.routers.dashboard.entrypoints=web"
        - "traefik.http.routers.dashboard.service=api@internal"

  subtitles-api:
    image: ${DOCKER_IMAGE:-ghcr.io/serhw/english-subtitels-api:latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      # Override Seq URL via environment variables
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
      # You can also override log levels
      - Serilog__MinimumLevel__Default=Information
    secrets:
      - db_connection_string
    depends_on:
      - seq
      - traefik
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`sub-english.top`)"
        - "traefik.http.routers.api.entrypoints=web"
        - "traefik.http.services.api.loadbalancer.server.port=8080"
    volumes:
      # Named volume for Serilog buffering
      - serilog-buffer:/tmp/serilog-buffer

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINUSERNAME=admin
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=QFu74F0HozBXBGahJyG8YYM7mgZU+c2PdbfTMbn4tqGxiGM6mLQUiZfdXBWFOO5438iXtkMqmIavZ7ZUYPomgx1FILpeB8SHh7bBW4vxjOE9
      # Generate hash with: echo 'your-password' | docker run --rm -i datalust/seq config hash
    volumes:
      - seq-data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.seq.rule=Host(`logs.sub-english.top`)"
        - "traefik.http.routers.seq.entrypoints=web"
        - "traefik.http.services.seq.loadbalancer.server.port=5341"

networks:
  app-network:
    driver: overlay
    attachable: true

volumes:
  seq-data:
  serilog-buffer:
  traefik-certificates:

secrets:
  db_connection_string:
    external: true
    name: subtitles_db_connection
